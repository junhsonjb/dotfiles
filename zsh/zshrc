# I probably could have looped thru all the files in ~/.config/zsh
# but doing so would rob me of the implicit documentation that comes 
# with specifying each config file being source'd in. This way, I can
# read .zshrc and know where I need to go if I need to edit a certain file!

# this way of setting DOTFILES isn't working, see install script
# TODO: set DOTFILES in a more central location to avoid redundancy!!!
# DOTFILES="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

DOTFILES="$HOME/.dotfiles"

# Load in FZF
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Load in zsh syntax highlighting
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Load in completion config
source $DOTFILES/zsh/completion.zsh

# Load in prompt config
source $DOTFILES/zsh/prompt.zsh

# Load in miscellaneous config (history, bindings, tab stuff, etc.)
source $DOTFILES/zsh/misc.zsh

# Load in shortcuts config (both aliases and functions)
source $DOTFILES/zsh/aliasrc.zsh

# Load in plugins config
source $DOTFILES/zsh/plugins.zsh

export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
# CTRL-Y to copy the command into clipboard using pbcopy
# export FZF_CTRL_R_OPTS="
#   --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
#   --color header:italic
#   --header 'Press CTRL-Y to copy command into clipboard'"

# Load in work-specific shell configs
if [[ -d "$DOTFILES/work/zsh" ]]; then
    source $DOTFILES/work/zsh/work.sh
fi
