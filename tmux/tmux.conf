# TODO: organize this file

# Bind prefix to ctrl-space
unbind C-Space
set -g prefix C-Space
bind C-Space send-prefix

# Set default terminal mode to 256 color mode
set -g default-terminal "screen-256color"

# Add style to the status line
set -g status-style fg=black,bg=cyan

# Border style
setw -g pane-border-style fg=cyan,bold,bg=black
setw -g pane-active-border-style fg=green,bg=black

# Pane/Window style
setw -g window-style fg=default,bg=default
setw -g window-active-style fg=default,bg=default
setw -g window-status-current-style fg=black,bold

# Set Escape Delay to  0 (allows quicker escapes out of insert mode and double escaping floating
# terminal in nvim)
set -sg escape-time 0

# Status line style
set -g status-left-length 40
set -g status-left "#[fg=black][#S] "
set -g status-right-length 40
set -g status-right "%A, %B %d %Y %I:%M%p "
set -g status-justify left

# Enable mouse operations
set -g mouse on

# Increase history
set-option -g history-limit 5000

# Begin numbering windows/panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows upon closing one (or more)
set -g renumber-windows on

# More intuitive split window commands
bind "|" split-window -h -c "#{pane_current_path}"
bind "\\" split-window -h -c "#{pane_current_path}"

bind "-" split-window -v -c "#{pane_current_path}"
bind "_" split-window -v -c "#{pane_current_path}"

# Non-vim styled keybinds
unbind C-h
unbind C-j
unbind C-k
unbind C-l

bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# I thought these lines would fix the ctrl-{hjkl} but it was something else, so I'm commenting these out
# After a while, if we still never use it we'll delete. So this is kinda like a trial period
# unbind-key -T prefix C-h
# unbind-key -T copy-mode-vi C-h

# unbind-key -T prefix C-j
# unbind-key -T copy-mode-vi C-j

# unbind-key -T prefix C-k
# unbind-key -T copy-mode-vi C-k

# unbind-key -T prefix C-l
# unbind-key -T copy-mode-vi C-l

# Easy config reloads
bind r source-file ~/.config/tmux/tmux.conf \; display "config reloaded!"

# Keep current path for new window
bind c new-window -c "#{pane_current_path}"

# Copy to clipboard
set-option -s set-clipboard on 

# Enable vi-copy-mode and change keys to enter it
setw -g mode-keys vi
bind -n C-y copy-mode # "y" for yank a.k.a. copy (C-c is SIGSTOP)
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# not adding a shortcut for paste, since there's already cmd-v!
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# FROM STACK OVERFLOW -- enable copy/paste with mouse
# macOS only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
