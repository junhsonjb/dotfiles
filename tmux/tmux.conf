# Bind prefix to ctrl-space
unbind C-Space
set -g prefix C-Space
bind C-Space send-prefix

# Set default terminal mode to 256 color mode
set -g default-terminal "screen-256color"

# Add style to the status line
set -g status-style fg=black,bg=cyan

# Border style
setw -g pane-border-style fg=cyan,bold,bg=black
setw -g pane-active-border-style fg=green,bg=black

# Pane/Window style
setw -g window-style fg=default,bg=default
setw -g window-active-style fg=default,bg=default
setw -g window-status-current-style fg=black,bold

# Status line style
set -g status-left-length 40
set -g status-left "#[fg=black][#S] "
set -g status-right-length 40
set -g status-right "%A, %B %d %Y %I:%M%p "
set -g status-justify centre

# Enable mouse operations
set -g mouse on

# Increase history
set-option -g history-limit 5000

# Begin numbering windows/panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows upon closing one (or more)
set -g renumber-windows on

# More intuitive split window commands
bind "|" split-window -h -c "#{pane_current_path}"
bind "\\" split-window -h -c "#{pane_current_path}"

bind "-" split-window -v -c "#{pane_current_path}"
bind "_" split-window -v -c "#{pane_current_path}"

# Easy config reloads
bind r source-file ~/.config/tmux/tmux.conf \; display "config reloaded!"

# Keep current path for new window
bind c new-window -c "#{pane_current_path}"

# Copy to clipboard
set-option -s set-clipboard on 

# Enable vi-copy-mode and change keys to enter it
setw -g mode-keys vi
bind -n C-y copy-mode # "y" for yank a.k.a. copy (C-c is SIGSTOP)
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# not adding a shortcut for paste, since there's already cmd-v!
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Quickly resize panes
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r C-h resize-pane -L 2
bind -r C-l resize-pane -R 2

# Switch panes using C+{H,J,K,L} (no prefix)
# (testing out panes in vim)
# unbind -n C-h select-pane -L
# unbind -n C-j select-pane -D
# unbind -n C-k select-pane -U
# unbind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# (at some point, I'd like to install TPM and replace this with the TPM plugin call)
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @dracula-plugins "battery git weather time"
set -g @dracula-show-left-icon session

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
